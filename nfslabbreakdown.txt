WHAT JUST HAPPENED?? ðŸ’» Persistent Storage with NFS

Part 1: 
- get an NFS server deployment running inside our cluster
- put a server pod on every node so the server can be accessed from anywhere in the cluster
- ...but it's not ready to be used yet!

Part 2:
- create a storageClass that allows persistent volumes to use the NFS server.

Part 3:
- make a PV, PVC, and Pod- then make a test file inside the Pod. Then test that the file is accessible from any node in the cluster!

--------------
Steps 1-13:
Install the NFS server. Break down what got installed.
â€¢ the NFS server itself, which is in a deployment
â€¢ a ServiceAccount to manage the NFS server as well as all the permissions it needs to do so (RBAC)
â€¢ a deployment that the ServiceAccount uses to manage the NFS server
â€¢ the CSI driver for NFS storage, enabling this storage to work
â€¢ A DaemonSet that puts a pod on every node, enabling the NFS server to be accessed from every node.

Step 16:
â€¢ Install Jinja2, a templating engine that allows you to "fill in the blanks" on template files. Handy for populating files from the command line.

Steps 17-20:
â€¢ Insert the IP address that leads to your NFS server into a StorageClass manifest.
â€¢ Create the StorageClass for the NFS storage we've set up. Allows our cluster to now use this type of storage.

Steps 21-26:
â€¢ Create a PersistentVolume, a PersistentVolumeClaim, and a Pod that mounts that PVC.

Steps 27-END:
â€¢ Confirm that the PVC mountPath in the Pod is connected to our NFS server.
â€¢ Create a file in that mountPath.
â€¢ Send a "cat file" command to one of the NFS server Pods to confirm the file is saved at that location and our storage solution works!
